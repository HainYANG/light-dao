<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
	default-lazy-init="true">

	<aop:config proxy-target-class="true" />
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!--注册annotation -->
	<context:annotation-config />
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.mifi.internal.account">
	</context:component-scan>

	<!-- 主库更新事务支持 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="false" />
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="jade.dataSource.com.mifi.internal.account.dao" />
	</bean>

	<bean id="transactionTemplate"
		  class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="isolationLevelName" value="ISOLATION_REPEATABLE_READ" />
		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" />
		<property name="timeout" value="30" />
	</bean>

	<bean id="longTransactionTemplate"
		  class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="isolationLevelName" value="ISOLATION_REPEATABLE_READ" />
		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" />
		<property name="timeout" value="1800" />
	</bean>

	<!-- DAO支持 -->
	<bean
		class="net.paoding.rose.jade.context.spring.JadeBeanFactoryPostProcessor" />
	<bean id="h2Database" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close" lazy-init="false">
		<property name="driverClassName" value="org.h2.Driver"></property>
		<property name="url" value="jdbc:h2:mem:mifi_internal_account"></property>
		<property name="username" value="sa"></property>
		<property name="password" value=""></property>
	</bean>

	<!-- 数据源配置 dbcp -->
	<!--这里使用Flyway框架进行sql文件的导入工作，具体的导入在init-method的migrate方法中进行。
    如果不特殊指定，默认sql文件存放在classpath：db.migration文件夹下-->
	<bean id="dbMigration" class="org.flywaydb.core.Flyway"
		  depends-on="h2Database" init-method="migrate" lazy-init="false">
		<property name="sqlMigrationPrefix" value="test"/>
		<property name="dataSource" ref="h2Database"/>
	</bean>

	<bean id="jade.dataSource.com.mifi.internal.account.dao"
		  class="com.mifi.internal.account.biz.TestDataSource"
		  factory-method="getInstance">
	<constructor-arg ref="h2Database"/>
	</bean>

</beans>
